services:
  - mongodb
  - postgres
  - redis-server

language: python

python:
  - "2.7"

env:
  - MONGREY_STORAGE=mongo MONGREY_DB=mongodb://localhost/mongrey_test MONGREY_CACHE=simple REDIS=0
  - MONGREY_STORAGE=sql MONGREY_DB=sqlite:////tmp/mongrey_test.db MONGREY_CACHE=simple REDIS=0
  - MONGREY_STORAGE=sql MONGREY_DB=postgres://localhost/mongrey_test POSTGRESQL=1 MONGREY_CACHE=simple REDIS=0
  - MONGREY_STORAGE=sql MONGREY_DB=mysql://localhost/mongrey_test MYSQL=1  MONGREY_CACHE=simple REDIS=0
  - MONGREY_STORAGE=sql MONGREY_DB=sqlite:////tmp/mongrey_test.db MONGREY_CACHE=redis://localhost REDIS=1
  
before_install:
 - "sudo apt-get update -qq"
 - "sudo apt-get install -y build-essential ca-certificates language-pack-en python-dev cython libmysqlclient-dev"
 
install:
  - pip install coveralls 
  - pip install -r requirements/tests.txt
  - pip install -r requirements/mongo.txt
  - pip install -r requirements/sql-pgsql.txt
  - pip install -r requirements/sql-mysql.txt
  #- "if [[ $MONGREY_STORAGE == 'mongo' ]]; then pip install -r requirements/mongo.txt; fi"
  #- "if [[ $POSTGRESQL == '1' ]]; then pip install -r requirements/sql-pgsql.txt; fi"
  #- "if [[ $MYSQL == '1' ]]; then pip install -r requirements/sql-mysql.txt; fi"
  - "if [[ $REDIS == '1' ]]; then pip install redis; fi"
  - pip install --no-deps .

before_script:
  - sleep 5
  - "if [[ $POSTGRESQL == '1' ]]; then sh -c \"psql -c 'create database mongrey_test;' -U postgres\"; fi"
  - "if [[ $MYSQL == '1' ]]; then mysql -e 'create database mongrey_test;'; fi"
  
script:
  - nosetests -s -v mongrey
  - flake8 mongrey

branches:
  only:
    - master
    
after_success: coveralls --verbose

#after_failure